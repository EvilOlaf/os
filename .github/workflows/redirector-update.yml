name: Redirector update (cronjob)
on:
  repository_dispatch:
    types: ["Redirector update"]
#  schedule:
#    - cron: "00 3 * * *"
  workflow_dispatch:

jobs:

  Check:

    name: "Check membership"
    runs-on: Linux
    steps:

      - name: "Check membership"
        uses: armbian/actions/team-check@main
        with:
          ORG_MEMBERS: ${{ secrets.ORG_MEMBERS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Test-debs-beta:
    name: "Check debs-bets mirrors"
    needs: Check
    outputs:
      matrix: ${{steps.json.outputs.JSON_CONTENT}}
    runs-on: Linux
    steps:

      - name: Get primary mirrors from database
        id: json
        run: |

          echo 'JSON_CONTENT<<EOF' >> $GITHUB_OUTPUT
          curl -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" -H "Accept: application/json; indent=4" \
          "https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/?limit=500&name__empty=false&tag=debs-beta" \
          | jq '.results[] | .name,.custom_fields["download_path_debs"],.id' | sed "s|null|beta|" | sed "s/\"//g" \
          | xargs -n3 -d'\n' | sed -e 's/\s\+/\//' | sed "s/ /,/" | jq -cnR '[inputs | select(length>0)]' | jq >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  Test-debs:
    name: "Check debs mirrors"
    needs: Check
    outputs:
      matrix: ${{steps.json.outputs.JSON_CONTENT}}
    runs-on: Linux
    steps:

      - name: Get primary mirrors from database
        id: json
        run: |

          echo 'JSON_CONTENT<<EOF' >> $GITHUB_OUTPUT
          curl -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" -H "Accept: application/json; indent=4" \
          "https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/?limit=500&name__empty=false&tag=debs" \
          | jq '.results[] | .name,.custom_fields["download_path_debs"],.id' | sed "s|null|apt|" | sed "s/\"//g" \
          | xargs -n3 -d'\n' | sed -e 's/\s\+/\//' | sed "s/ /,/" | jq -cnR '[inputs | select(length>0)]' | jq >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  Ping-debs-beta:
    name: "Check debs-beta"
    runs-on: Linux
    needs: Test-debs-beta
    outputs:
      matrix: ${{needs.Test-debs-beta.outputs.matrix}}
    if: ${{ needs.Test-debs-beta.outputs.matrix != '[]' && needs.Test-debs-beta.outputs.matrix != '' }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:

        node: ${{fromJson(needs.Test-debs-beta.outputs.matrix)}}

    steps:

      - name: "Check"
        run: |

          SERVER_URL=$(echo "${{ matrix.node }}" | cut -d"," -f1)
          SERVER_ID=$(echo "${{ matrix.node }}" | cut -d"," -f2)
          
          ORIGIN=$(timeout 30 curl --retry 5 -s https://imola.armbian.com/beta/control || true)
          CHECK=$(timeout 30 curl --retry 5 -s https://${SERVER_URL}/control || true)
          if [[ "$ORIGIN" == "$CHECK" ]]; then

             # Change status in NetBox
             curl -s -X PATCH \
             -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" \
             -H "Content-Type: application/json" \
             https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/${SERVER_ID}/ \
             --data '{"status" : "active" }' | jq '.'
            #echo "Enabling $SERVER_URL" >> $GITHUB_STEP_SUMMARY
            #echo "Origin $ORIGIN" >> $GITHUB_STEP_SUMMARY
            #echo "Check $CHECK" >> $GITHUB_STEP_SUMMARY

          else
          
             # Change status in NetBox
             curl -s -X PATCH \
             -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" \
             -H "Content-Type: application/json" \
             https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/${SERVER_ID}/ \
             --data '{"status" : "failed" }' | jq '.'
             #echo "Disabling $SERVER_URL" >> $GITHUB_STEP_SUMMARY
             #echo "Origin $ORIGIN" >> $GITHUB_STEP_SUMMARY
             #echo "Check $CHECK" >> $GITHUB_STEP_SUMMARY
          fi

  Ping-debs:
    name: "Check debs"
    runs-on: Linux
    needs: Test-debs-beta
    outputs:
      matrix: ${{needs.Test-debs.outputs.matrix}}
    if: ${{ needs.Test-debs.outputs.matrix != '[]' && needs.Test-debs.outputs.matrix != '' }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:

        node: ${{fromJson(needs.Test-debs.outputs.matrix)}}

    steps:

      - name: "Check"
        run: |

          SERVER_URL=$(echo "${{ matrix.node }}" | cut -d"," -f1)
          SERVER_ID=$(echo "${{ matrix.node }}" | cut -d"," -f2)
          
          ORIGIN=$(timeout 30 curl --retry 5 -s https://imola.armbian.com/apt/control || true)
          CHECK=$(timeout 30 curl --retry 5 -s https://${SERVER_URL}/control || true)
          if [[ "$ORIGIN" == "$CHECK" ]]; then

             # Change status in NetBox
             curl -s -X PATCH \
             -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" \
             -H "Content-Type: application/json" \
             https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/${SERVER_ID}/ \
             --data '{"status" : "active" }' | jq '.'
            #echo "Enabling $SERVER_URL" >> $GITHUB_STEP_SUMMARY
            #echo "Origin $ORIGIN" >> $GITHUB_STEP_SUMMARY
            #echo "Check $CHECK" >> $GITHUB_STEP_SUMMARY

          else
          
             # Change status in NetBox
             curl -s -X PATCH \
             -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" \
             -H "Content-Type: application/json" \
             https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/${SERVER_ID}/ \
             --data '{"status" : "failed" }' | jq '.'
             #echo "Disabling $SERVER_URL" >> $GITHUB_STEP_SUMMARY
             #echo "Origin $ORIGIN" >> $GITHUB_STEP_SUMMARY
             #echo "Check $CHECK" >> $GITHUB_STEP_SUMMARY
          fi

  Prepare-debs-beta:
    name: "Generate debs-beta YAML for re-director"
    needs: Ping-debs-beta
    runs-on: Linux
    steps:

      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "P3TERX/GeoLite.mmdb"
          latest: true
          fileName: "*.mmdb"

      - name: Test
        uses: armbian/actions/make-yaml-redirector@main
        with:
          variant: debs-beta
          port: 1234
          geodb: GeoLite2-City.mmdb
          asndb: GeoLite2-ASN.mmdb
          dl_map: userdata.csv
          reloadKey: NLnC4QNF862QumEpt7zwVPZAEvqAz6cZ
          failoverserver: imola.armbian.com
          netbox: ${{ secrets.NETBOX_TOKEN }}


  Prepare-debs:
    name: "Generate debs YAML for re-director"
    needs: Ping-debs
    runs-on: Linux
    steps:

      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "P3TERX/GeoLite.mmdb"
          latest: true
          fileName: "*.mmdb"

      - name: Test
        uses: armbian/actions/make-yaml-redirector@main
        with:
          variant: debs
          port: 1234
          geodb: GeoLite2-City.mmdb
          asndb: GeoLite2-ASN.mmdb
          dl_map: userdata.csv
          reloadKey: NLnC4QNF862QumEpt7zwVPZAEvqAz6cZ
          failoverserver: imola.armbian.com
          netbox: ${{ secrets.NETBOX_TOKEN }}
